<?xml version="1.0" encoding="UTF-8"?>


<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

 <mapper namespace="com.iu.base.member.MemberDAO">
	<select id="setMemberLogin" parameterType="MemberVO" resultMap="memberLogin">
		SELECT * FROM MEMBER
			LEFT JOIN
			MEMBER_ROLE
			USING(USERNAME)
			LEFT JOIN
			ROLE
			USING(NUM)
		
		 WHERE USERNAME=#{username}
	</select> 
 	<resultMap type="MemberVO" id="memberLogin">
 	<id column="username" property="username"/>
 	<result column="PASSWORD" property="password"/>
 	<result column="NAME" property="name"/>
 	<result column="EMAIL" property="email"/>
 	<result column="BIRTH" property="birth"/>
 	<!-- <result column="ENABLED" property="enabled"/> -->
 	<!-- <association property="roleVO" javaType="RoleVO">
 	<id column="NUM" property="num"/>
 	<result column="ROLENAME" property="roleName"/>
 	</association> -->
 	<collection property="roleVOs" javaType="List" ofType="RoleVO">
 	<id column="NUM" property="num"/>
 	<result column="ROLENAME" property="roleName"/>
 	</collection>
 	</resultMap>
 	
 	<insert id="setRoleInsert" parameterType="MemberVO">
   INSERT INTO MEMBER_ROLE (USERNAME, NUM) 
   VALUES(#{username},3)
   </insert> 
   <insert id="setMemberRole" parameterType="Map">
   INSERT INTO MEMBER_ROLE (USERNAME, NUM) 
   VALUES(#{username},#{num})
   </insert>
   <insert id="setMemberInsert" parameterType="MemberVO" useGeneratedKeys="true" keyProperty="username">
      INSERT INTO MEMBER(USERNAME,PASSWORD,NAME,EMAIL,BIRTH,ENABLED)
      VALUES(#{username},#{password},#{name},#{email},#{birth},1)
   </insert>
   <select id="getIdCheck" parameterType="MemberVO" resultType="MemberVO">
   SELECT USERNAME FROM MEMBER WHERE USERNAME=#{username}
   </select>
   <select id="getMemberList" resultType="MemberVO">
   	SELECT * FROM MEMBER
   </select>
   <update id="setLogout" parameterType="MemberVO">
   	UPDATE MEMBER SET LASTTIME=now() WHERE USERNAME=#{username}
   </update>
   <select id="getLogoutTime" parameterType="MemberVO" resultType="Int">
   	SELECT TIMESTAMPDIFF(DAY, #{lastTime}, now());
   </select>
   <update id="setEnable" parameterType="MemberVO">
   	UPDATE MEMBER SET ENABLED = 0 WHERE USERNAME=#{username}
   </update>
   <update id="setEnables" parameterType="MemberVO">
   	<![CDATA[
   	UPDATE MEMBER SET ENABLED = 0 WHERE LASTTIME <=NOW() - INTERVAL 3DAY
   	]]>
   </update>
   <update id="setEnablesss" parameterType="MemberVO">
   	UPDATE MEMBER SET ENABLED = 0
WHERE USERNAME IN (SELECT USERNAME FROM MEMBER WHERE TIMESTAMPDIFF(DAY, LASTTIME, NOW()) >= 3) ;
   </update>
   <select id="getBirth" resultType="MemberVO">
   		SELECT * FROM MEMBER WHERE DATE_FORMAT(BIRTH ,'%m-%d') = DATE_FORMAT(now(),'%m-%d')   
   </select>
   <update id="setPwChange" parameterType="MemberVO">
   	UPDATE MEMBER SET PASSWORD=#{password} WHERE USERNAME=#{username}
   </update>
   
   <select id="getEmailCheck" resultType="MemberVO" parameterType="MemberVO">
   	SELECT * FROM MEMBER WHERE USERNAME=#{username} AND EMAIL = #{email}
   </select>
    
 </mapper>